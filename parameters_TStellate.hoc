/* -*- mode: nrnhoc; tab-width: 4; indent-tabs-mode: t -*- */



// Cochlear Nucleus network model: parameters file
// based on parameters_odour_baseline.hoc by Andrew Davison
// Michael Eager, University of Melbourne, 2009

nchannels   	= 100			// Total number of frequency channels
nTSperchannel   = 1           		// number of TS cells in each freq channel
numTS     	= nchannels*nTSperchannel// total number of TS cells
nTVperchannel   = 1           		// number of TV cells in each freq channel
numTV   	= nchannels*nTVperchannel// total number of TV cells
nDSperchannel   = 1           		// number of DS cells in each freq channel
numDS		= nchannels*nDSperchannel// total number of DS cells
nGperchannel 	= 1          		// number of Golgi cells in each freq channel
numG	     	= nchannels*nGperchannel// total number of Golgi cells

use_seed = 0
seed = 0         		// seed for random number generator see InitRandom()



strdef fileroot, origfileroot
sprint(fileroot,"TStellate")	// root for output filenames
origfileroot = fileroot

inputnumber = 1                 // fixed input file
tstop	    = 90               // ms, total simulation time
ttrans	    = 20                // ms,  when calculating statistics, ignore
	      			// spikes occuring before this time
cvode.active(0)
dt		= 0.05
steps_per_ms 	= 10            // NEURON variable
setdt()
dt		= 0.1		//ms, integration time step
celsius 	= 37		//degrees C, body  temperature
secondorder	= 2		//second order integration


//Some default parameters
v_init = -65
tstellate_gnabar_rm = 0.23677
tstellate_gkhtbar_rm= 0.0189416
tstellate_gleak_rm  = 0.000473539
tstellate_erev_rm   =-55
tstellate_ghbar_rm  = 6.20392e-05
tstellate_gkabar_ka = 0.01539


//Optimisation parameters
print "Optimisation parameters for T Stellate cell"

  objref pvec,fvec,pvec_ranges,pvec_name,pvec_factor
  pvec = new Vector()//NPARAMS) //contains the parameters to be fitted
  pvec_name = new List() //names of parameters in String list
  pvec_factor = new Vector() //NPARAMS,1)
  //mul factor
  //for i=0,NPARAMS-1 pvec_factor.x[i] = 1

  NPARAMS=6
  pvec_ranges= new Matrix(NPARAMS,2) // (min,max) pairs for each param
  //min
  for i=0,NPARAMS-1 pvec_ranges.x[i][0]= 0.00001
  //max
  for i=0,NPARAMS-1 pvec_ranges.x[i][1]= 0.003

  proc add_param(){
//	  add to parameter vector used in optimisation
	  pvec_name.append(new String($s1)) //Name
	  pvec.append($2)                   //Initial value
	  pvec_factor.append($3)
//	  pvec_min.append($4) //Minimum value
//	  pvec_max.append($5) //Maximum value
}

//Names                                               //Initial values	//Param Factor
 //Leak conductance effects Input resistance and Membrane time constant
 pvec_name.append(new String("tstellate_gleak_rm"))	pvec.append(0.000473539) pvec_factor.append(1)  
 pvec_ranges.x[pvec.size()-1][0]=5e-05  
 pvec_ranges.x[pvec.size()-1][1]=0.005
 pvec_name.append(new String("tstellate_gkhtbar_rm"))	pvec.append(0.000189416 )	 pvec_factor.append(100) 
 pvec_ranges.x[pvec.size()-1][0]=0.0001  
 pvec_ranges.x[pvec.size()-1][1]=0.0005
  pvec_name.append(new String("param.w.x[lsr][ts]"))	pvec.append(0.0008)	pvec_factor.append(1)
  pvec_name.append(new String("param.w.x[hsr][ts]"))	pvec.append(0.0008)	pvec_factor.append(1)
  pvec_name.append(new String("param.w.x[ds][ts]"))	    pvec.append(0.000170)	pvec_factor.append(1)
  pvec_name.append(new String("param.w.x[tv][ts]"))	    pvec.append(0.00010)	    pvec_factor.append(1)
  //pvec_name.append(new String("param.w.x[glg][ts]"))	pvec.append(0.000130)	pvec_factor.append(1)

  // pvec_name.append(new String("tstellate_gnabar_rm"))	pvec.append(0.23677)	 pvec_factor.append(1)
  //pvec_name.append(new String("tstellate_gkhtbar_rm"))	pvec.append(0.0189416 )	 pvec_factor.append(1)


  /* // Reversal potential
   pvec_name.append(new String("tstellate_erev_rm"))	    pvec.append(0.0055 )     pvec_factor.append(-10000)
   pvec_ranges.x[4][0]=0.0045
   pvec_ranges.x[4][1]=0.0070
  */
  //  pvec_name.append(new String("tstellate_ghbar_rm"))	pvec.append(6.20392e-04) pvec_factor.append(10)

  //  pvec_name.append(new String("tstellate_gkabar_ka"))	pvec.append(0.000473539) pvec_factor.append(1)






  // cmd is a strdef variable that should be used in local routines and not passed across procedures
strdef cmd
proc set_pvec(){local pp
    for pp=0,NPARAMS-1 {
		sprint(cmd,"pvec.x[%d] = %s / %g ",pp,pvec_name.object(pp).s,pvec_factor.x[pp])
		execute1(cmd)
    }
}

proc set_params(){local pp
    for pp=0,NPARAMS-1 {
		sprint(cmd,"%s = %g * %g ",pvec_name.object(pp).s,pvec.x[pp],pvec_factor.x[pp])
		execute1(cmd)
    }
}

proc show_pvec(){local pp
    pvec.printf
    for pp=0,NPARAMS-1 {
		sprint(cmd,"print %s ",pvec_name.object(pp).s)
		execute1(cmd)
    }
}
