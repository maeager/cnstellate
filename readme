
* NEURON compiled for gui or mpi 


I generally setup two versions of NEURON one for testing with a GUI and the
other with MPI. PVM may also be used to generate parallel
simulations, but mpich2 or open-mpi is preferred.

Firstly, unpack iv then jump into the iv folder and compile. (Up to date package can be pulled from mercurial repo  http://www.neuron.yale.edu/hg/neuron/iv )

: cd ~
: mkdir -p src/neuron
: cd src/neuron
: tar zxvf ../iv-17.tar.gz
: mv iv-17 iv
: cd iv
: ./configure --prefix=`pwd` && make && make install

Installation in /usr/local is the default and requires root privileges.

Next unpack nrn and auto configure but do not compile. (Development code is available from  http://www.neuron.yale.edu/hg/neuron/nrn)

: cd ..
: tar zxvf nrn-X.X.tar.gz
: mv nrn-X.X nrn
: cd nrn

Now make your separate builds for the gui

: cd ~/src/neuron
: mkdir nrngui
: cd nrngui
: ../configure --prefix=`pwd` --with-iv=$HOME/Neuron/iv --without-paranrn
: make && make install

and for MPI

: cd ..
: mkdir mpi
: ../configure --prefix=`pwd` --without-iv --with-paranrn
: make && make install


* CNSTELLATE configuration


In the working cnstellate directory, setup two linkable libraries against the two nrn builds.

See the Makefile for instructions to make either the gui or mpi version, otherwise use "make all".  This calls the appropriate 'nrnivmodl' script to convert the *.mod files to a dynamic library.

: make gui

or

: make mpi

To run a script in gui mode:

:  ./gui/special par_golgi_test.hoc -

The dash on the end allows the user to enter the interactive mode after loading the HOC file.

The MPI version should be run in the background from the mpispecial script or in batch mode.  "np" is the number of processors requested

: ./mpispecial np par_batch.hoc > /tmp/batch.log 2>&1 &

To run a test on different numbers of processors, see the example script test1.sh or run it using

: ./test1.sh


Submit the script to a PBS engine using

qsub -q medium.q -b y -V -cwd -e /dev/null -o /dev/null ./mpispecial np par_batch.hoc 



