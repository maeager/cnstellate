# -*- mode: org; -*-

* Compile NEURON for gui or mpi 

I generally setup two versions of NEURON one for testing with a GUI
and the other with MPI. PVM may also be used to generate parallel
simulations, but mpich2 or open-mpi is preferred.

Firstly, unpack iv then jump into the iv folder. 

: cd ~
: mkdir -p src/neuron
: cd src/neuron
: tar zxvf ../iv-17.tar.gz
: mv iv-17 iv
: cd iv

Default installation (/usr/local) requires root privileges. I prefer to install IV into its source directory.

: ./configure --prefix=`pwd` 
: make && make install


Next unpack nrn and auto-configure but do not compile.

: cd ..
: tar zxvf nrn-X.X.tar.gz
: mv nrn-X.X nrn
: cd nrn

Now make your separate builds for the gui

: cd ~/src/neuron
: mkdir nrngui
: cd nrngui
: ../configure --prefix=`pwd` --with-iv=$HOME/src/neuron/iv --without-paranrn
: nice make -j3 && make install

and for MPI

: cd ..
: mkdir mpi
: ../configure --prefix=`pwd` --without-iv --with-paranrn
: nice make -j3 && make install

** Developmental NEURON 

The up to date NEURON package can be pulled from the NEURON mercurial repository
(http://www.neuron.yale.edu/hg/neuron/iv and 
 http://www.neuron.yale.edu/hg/neuron/nrn)
Each of the source packages need to run some autotools scripts in ./build.sh in their directories.

: cd ~
: mkdir -p src/neuron
: cd src/neuron
: hg clone http://www.neuron.yale.edu/hg/neuron/iv
: hg clone http://www.neuron.yale.edu/hg/neuron/nrn
: cd iv
: ./build.sh
: cd ../nrn
: ./build.sh

Use the configure/make/install steps above on the developmental source code.

* CNSTELLATE configuration

In the working cnstellate directory, setup two linkable libraries against the
two nrn builds.

See the Makefile for instructions to make either the gui or mpi version,
otherwise use "make all".  This calls the appropriate 'nrnivmodl' script to
convert the *.mod files to a dynamic library.

: make gui

or

: make mpi


* Enabling FFGN in the Zilany et al. 2009 AN model

Uncomment the variables below in an_zilany_v4.mod

:  /* #define DEBUG   */
:  /* #define _FFGN_  */


* Running CNSTELLATE

To run a script in gui mode:

:  ./gui/special par_golgi_test.hoc -

The dash on the end allows the user to enter the interactive mode after loading the HOC file.

To run the script in non-gui mode, use the mpi version:

:  ./mpi/special par_golgi_test.hoc -

When the MPI version is run without mpiexec or mpirun, the program run identical to the gui version without any visual windows. 
For parallel cnstellate to work, the MPI version should be run in the background from the mpispecial script or in batch mode:

: ./mpispecial np par_batch.hoc > /tmp/batch.log 2>&1 &

"np" is the number of processors requested.  See mpispecial for how the parallel mode is implemented.

To run a test on different numbers of processors, see the example script test1.sh or run it using

: ./test1.sh


Submit the script to a PBS engine using

: qsub -q medium.q -b y -V -cwd `pwd`/mpispecial 5 par_batch.hoc 



