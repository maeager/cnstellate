/* -*- mode: nrnhoc; tab-width: 4; indent-tabs-mode: t -*- */

/*  NetworkParameters
*  Template for all modified parameters in CNSM
*/


objref param

begintemplate NetworkParameters
public bw              //bandwidth or spread; distribution variance in unit channels 
public n               //number of connections between pre-cells to one post-cell
public w               //synaptic weight  (maximum conductance in PSP)
public delay           //additional delay in ms: Pre-cell AP time to post-cell response time
public ncol,nrow
//Golgi model parameters
public golgi_spatial_filter_variance_LSR,golgi_syn_filter_scale_factor,golgi_spon
//DS_ClickRecovery and RateLevel 
external _gaba_rise, _gaba_decay
public dstellate_gkltbar,gaba_decay,gaba_rise,dstellate_gleak,dstellate_gnabar,dstellate_gkhtbar,DS_params
//TV_Notch and RateLevel
public offset           // offset in channel units of mean distribution of connections between DS and TV cells
public tv_erev, tv_gleak
//TS cell parameters
public ts_gleak,ts_erev,ts_ghbar,ts_gkabar,ts_gnabar,ts_gkhtbar
public ts_jitter_sd     // standard deviation in delay of ANF inputs from similar fibres


//functions
public getnetparameters, saveparameters,printparams,show
objref bw, n, w,delay
offset=3
tv_erev=-65
ts_jitter_sd=0.2
proc init(){
    nrow = $1  ncol = $2
    bw = new Matrix(nrow, ncol)
    n = new Matrix(nrow, ncol)
    w = new Matrix(nrow, ncol)
    delay = new Matrix(nrow,ncol)
    offset=0
	
	
	gaba_decay								= _gaba_rise
	gaba_rise								= _gaba_decay

	//Default values
	golgi_spatial_filter_variance_LSR		= 2  //channel units when N=100, cfhi=64k, cflo=200	
	golgi_syn_filter_scale_factor			= 1														
	golgi_spon								= 3	
	

	dstellate_gkhtbar                       = 0.030623   //default I-II RM model
	dstellate_gkltbar					    = 0.0163897	 //default gleak for Type I-II RM model	 
	dstellate_gleak				            = 0.000274146 // default gleak	 
	dstellate_gnabar				        = 0.408307  //2 times default TypeI-II RM model	   
	
	tv_gleak     = 0.0004987
    tv_erev      = -70
	ts_jitter_sd=0.2
	
	ts_gnabar	= 0.23677
	ts_gkhtbar	= 0.0189416	
	ts_gleak = 0.000473539
	ts_erev = -55
	ts_ghbar = 6.20392e-05
	ts_gkabar =	0.01539   
	
}

objref file
strdef filename
proc getnetparameters(){
    objref file
    filename = $s1
    file = new File()
    file.ropen(filename)
    bw.scanf(file)
    n.scanf(file)
    w.scanf(file)
    delay.scanf(file)
    offset = file.scanvar()
    file.close()
	
}
proc getdelay() {
    objref file
    filename = "delays.dat"
    file= new File()
    file.ropen(filename)
    delay.scanf(file)
    file.close()
}
proc saveparameters(){
    objref file
    filename = $s1
    file = new File()
    file.wopen(filename)
    bw.fprint(file)
    n.fprint(file)
    w.fprint(file)
    delay.fprint(file)
    file.printf("%d\n",offset)
    file.close()
    objref file
}


proc printparams(){local irow,jcol
    //first object is file 
    //second variable is string
	file = $o1
    if (file.isopen()){
		file.printf("%s bandwidth\n",$s2)
		for irow=0, nrow-1 {
			file.printf("%s",$s2)
			for jcol=0,ncol-1 file.printf("\t%.4f",bw.getval(irow,jcol))
			file.printf("\n")
		}
		file.printf("%s num. connections\n",$s2)
		for irow=0, nrow-1 {
			file.printf("%s",$s2)
			for jcol=0,ncol-1 file.printf("\t%d",n.getval(irow,jcol))
			file.printf("\n")      
		}
		file.printf("%s weights\n",$s2)
		for irow=0, nrow-1 {
			file.printf("%s",$s2)
			for jcol=0,ncol-1 file.printf("\t%.8g",w.getval(irow,jcol))
			file.printf("\n")
		}
		file.printf("%s delay\n",$s2)
		for irow=0, nrow-1 {
			file.printf("%s",$s2)
			for jcol=0,ncol-1 file.printf("\t%.4f",delay.getval(irow,jcol))
			file.printf("\n")
		}
		file.printf("%s offset  %g\n",$s2, offset)
		file.printf("%s golgi_spatial_filter_variance_LSR	 %g\n",$s2,golgi_spatial_filter_variance_LSR	)
		file.printf("%s golgi_syn_filter_scale_factor %g\n",$s2,golgi_syn_filter_scale_factor	)
		file.printf("%s golgi_spon %g\n",$s2,golgi_spon)
		file.printf("%s gaba_decay			 %g\n",$s2,gaba_decay)
		file.printf("%s gaba_rise			 %g\n",$s2,gaba_rise)
		file.printf("%s dstellate_gkltbar	 %g\n",$s2,dstellate_gkltbar)
		file.printf("%s dstellate_gkhtbar	 %g\n",$s2,dstellate_gkhtbar)
		file.printf("%s dstellate_gleak  %g\n",$s2,dstellate_gleak)
		file.printf("%s dstellate_gnabar  %g\n",$s2, dstellate_gnabar)
		file.printf("%s tv_gleak  %g\n",$s2, tv_gleak)
		file.printf("%s tv_erev  %g\n",$s2, tv_erev)
		file.printf("%s ts_gkabar  %g\n",$s2,ts_gkabar)
		file.printf("%s ts_ghbar  %g\n",$s2, ts_ghbar)
		file.printf("%s ts_gleak  %g\n",$s2, ts_gleak)
		file.printf("%s ts_erev  %g\n",$s2, ts_erev)
		file.printf("%s ts_jitter_sd  %g\n",$s2, ts_jitter_sd)
		
	}
	
}

proc show(){local irow,jcol
	printf("// bandwidth\n")
	for irow=0, nrow-1 {
		for jcol=0,ncol-1 printf("\t%.4f",bw.getval(irow,jcol))		
	printf("\n")	
	}
	printf("\n// num. connections\n")
	for irow=0, nrow-1 {
		for jcol=0,ncol-1 printf("\t%d",n.getval(irow,jcol))
	printf("\n")	
	}
	printf("\n// weights\n")
	for irow=0, nrow-1 {
		for jcol=0,ncol-1 printf("\t%.8g",w.getval(irow,jcol))			
	printf("\n")	
	}
	printf("\n// delay\n")
	for irow=0, nrow-1 {
		for jcol=0,ncol-1 printf("\t%.4f",delay.getval(irow,jcol))
	printf("\n")	
	}
	printf("\n// offset	 %g\n",offset)
	printf("// golgi_spatial_filter_variance_LSR	 %g\n",golgi_spatial_filter_variance_LSR	)
	printf("// golgi_syn_filter_scale_factor %g\n",golgi_syn_filter_scale_factor	)
	printf("// golgi_spon %g\n",golgi_spon)
	printf("// gaba_decay			 %g\n",gaba_decay)
	printf("// gaba_rise			 %g\n",gaba_rise)
 	printf("// dstellate_gkltbar	 %g\n",dstellate_gkltbar)
	printf("// dstellate_gkhtbar	 %g\n",dstellate_gkhtbar)
	printf("// dstellate_gleak_rm  %g\n",dstellate_gleak)
	printf("// dstellate_gnabar_rm  %g\n", dstellate_gnabar)
	printf("// tv_gleak  %g\n", tv_gleak)
	printf("// tv_erev  %g\n", tv_erev)
	printf("// ts_gkabar  %g\n",ts_gkabar)
	printf("// ts_ghbar  %g\n", ts_ghbar)
	printf("// ts_gleak  %g\n", ts_gleak)
	printf("// ts_erev  %g\n", ts_erev)
}


endtemplate NetworkParameters

//default values from Golgi rate-level optimisation
// proc golgi_params(){
// param.golgi_spatial_filter_variance_LSR		= 2.4837  //channel units when N=100, cfhi=64k, cflo=200
// param.golgi_syn_filter_scale_factor			= 1.00
// param.w.x[lsr][glg]							= 0.5166
// param.w.x[hsr][glg]							= 0.0487
// param.golgi_spon								= 3.7271
// }

// //default values
// proc DS_params(){
// param.w.x[glg][ds]							= 0.000531549
// param.w.x[hsr][ds]							= 0.000167221
// param.w.x[lsr][ds]							= 0.013091
// param.dstellate_gkltbar					= 0.0163897
// param.gaba_decay								= 5.43235
// param.gaba_rise								= 0.261939
// param.dstellate_gleak				= 0.00274146
// param.dstellate_gnabar               = 0.408307
// }


// proc golgi_params(){
// xopen("pvec_Golgi_RateLevel.hoc")
// param.golgi_spatial_filter_variance_LSR = golgi_spatial_filter_variance_LSR
// param.golgi_syn_filter_scale_factor		= golgi_syn_filter_scale_factor
// param.golgi_spon						= golgi_spon
// }


// proc DS_params(){
// 	xopen("pvec_DS_ClickRecovery.hoc")
// 	xopen("pvec_DS_RateLevel.hoc")
// param.dstellate_gkltbar					= dstellate_gkltbar
// param.gaba_decay						= _gaba_decay
// param.gaba_rise							= _gaba_rise
// param.dstellate_gleak_rm				= dstellate_gleak_rm
// }

strdef paramfilename
param = new NetworkParameters(6,4)
sprint(paramfilename,"%s/defaultrecurrentparams.dat",cnstellate_dir)
param.getnetparameters(paramfilename)
//    golgi_params()
//    DS_params()
