/* -*- mode: nrnhoc; tab-width: 4; indent-tabs-mode: t -*- */

/* 
 *   
 *    Copyright Â© 2012 Michael Eager, (mick.eager@gmail.com)
 *    cnstellate was written as part of my PhD at The University of Melbourne
 *
 *    This file is part of cnstellate.
 * 
 *    This is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    This is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.  
 */



load_file("nrngui.hoc")
load_file("par_netpar.hoc")
load_file("par_init.hoc")

//nrn_load_dll("ia64/.libs/libnrnmech.so")

setuptime = startsw()
run_experiment("ClickDelay")
setuptime = startsw() - setuptime
printf("setup time %g\n",setuptime)

runtime=0
pnm.want_all_spikes()
pnm.set_maxstep(100)

objref mxhist
if (pnm.myid == 0) {
   mxhist = new Vector(25)
   pnm.pc.max_histogram(mxhist)
}

load_file("perfrun.hoc")

if (name_declared("mosinit")) {
        print "setuptime ", setuptime
        stop
}

/*

prun()

pnm.pc.runworker

print_results()

pnm.prstat(1)
pnm.gatherspikes()
getstat()
pnm.pc.done


spike2file()
perf2file()

for i=0, mxhist.size-1 {
   printf("%d\t %d\n", i, mxhist.x[i])
}

*/
printf("setuptime=%g   runtime=%g\n", setuptime, runtime)


quit()

