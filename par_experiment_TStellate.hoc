/* -*- mode: nrnhoc; tab-width: 4; indent-tabs-mode: t -*- */


// CS and CT data were from Long-Evans and Hooded Wistar rats at RVEEH
// reported in \citep{PaoliniClareyEtAl:2005}

// -- Paolini, Clarey et al 2005 --
//     The following variables were measured from the average
//  intracellular profile (25 stimulus repetitions) at 30 dB (± 5 dB) above
//  the SPL that evoked voltage depolarization from the resting membrane
//   potential (RMP): (i) a measure of the level of initial depolarization was
//  given by the ratio of the depolarization occurring 5–10 ms after tone
//  onset to the average amplitude drop to sustained levels occurring 20–
//   30 ms after tone onset; (ii) a measure of the adaptation of sustained
//  depolarization during tone presentation was given by the difference in
//  depolarization amplitude at 20 ms and 50 ms after stimulus onset; (iii)
//  a measure of post-tone hyperpolarization was given by the change in
//  voltage, relative to RMP, 60 ms after stimulus onset (i.e. 10 ms after
//  tone offset). Membrane potential levels from traces calculated at
//  specific time points for variables 2 and 3 (i.e. 20, 50 and 60 ms) were
//  found by averaging the membrane potential over a 1-ms period (i.e.
//  20–21, 50–51 and 60–61 ms). Included in this sample are four
//  neurons whose responses to tones have been described previously
//  (Paolini & Clark, 1999; cell #: 98-280-003, 95-232-003, 98-257-002,
//  96-249-012). The intracellular response profile of all neurons reported
//  in this study was distinct from that of bushy cells (Paolini et al., 1997;
//  Paolini & Clark, 1999).
 
 
//   The cell’s rate-level function was then determined by presenting 50-ms CF
//  tone bursts (5 ms rise–fall time; 25–50 repetitions; 10 Hz repetition
//  frequency) in 5- or 10-dB steps from subthreshold sound pressure     
//  levels (SPLs) to SPLs that produced discharge rate saturation. If    
//  possible, frequency response areas were then determined by present-  
//  ing tones at non-CF frequencies over a range of SPLs.                
//     Acoustic stimuli were synthesized digitally and generated by a    
//  Beyer DT48 transducer (Beyerdynamic, Farmingdale, NY, USA),          
//  which was positioned at the end of a hollow ear bar and controlled   
//  using a Tucker-Davis signal generator (Tucker-Davis Technologies,    

delay           = 0.02
dur             = 0.045
ramplngth       = 0.005
dutycycle       = 0.8        // get an extra 40msec post-tone
cfhi            = 40000
cflo            = 400
srate             = 100000      // 500k is no longer needed
stimtdres         = 1/srate
sg_rate         = 20000
sg_tdres        = 1/sg_rate
tstop=110
ANmodel         = 6
species         = 2 //Rat
audiogram_file  = "rat_bruce_audiogram.dat"
reps=25
usesavedfilterbanks = 1


RefreshCF()
GetAudiogramData()

objref tempmat, ivdata[2], chopperIVgr,chopperCVgr
objref CV_sustained, CV_transient1, CV_transient2, CV_data
proc ChopperCVData(){local nrow,ncol
nrow = 5
ncol = 3
objref CV_sustained, CV_transient1, CV_transient2
CV_transient2 = new Matrix()
CV_transient1 = new Matrix()
CV_sustained  = new Matrix()
	
file = new File()
file.ropen("TStellate/PaoliniBalancedInh-Fig2.png.dat")
if(file.isopen()){
CV_transient2.scanf(file,nrow, ncol)
CV_transient1.scanf(file,nrow, ncol)
CV_sustained.scanf(file,nrow, ncol)
file.close()	
} else {
print "Error reading CV data"
}
}




proc CalcIVMeasures(){
    
    onset_depol = $o1.mean(ivdata[0].indwhere(">=",5.0), ivdata[0].indwhere(">=",10.0))
    middle_depol = $o1.mean( ivdata[0].indwhere(">=",20), ivdata[0].indwhere(">=",30))
    
    onset_ratio = onset_depol / middle_depol
    
    v20_depol = $o1.mean( ivdata[0].indwhere(">=",20) - 1, ivdata[0].indwhere(">=",21))
    v50_depol = $o1.mean( ivdata[0].indwhere(">=",50) -1, ivdata[0].indwhere(">=",51))
    adaptation_ratio = v20_depol - v50_depol
    
    resting_value  = $o1.mean(0 , ivdata[0].indwhere(">",0))
    v60_depol = $o1.mean(ivdata[0].indwhere(">=",60) - 1, ivdata[0].indwhere(">=",61))
    offset_hyperpol = resting_value - v60_depol
    
    print "resting membrane potential              ", resting_value
    print "level of initial depolarization         ", onset_depol
    print "adaptation of sustained depolarization  ", adaptation_ratio
    print "post-tone hyperpolarization             ", offset_hyperpol

}


proc CS_data() {local points   
   //chopper sustained 
   // unit 01-864-004 
   //CV (10ms segs) always below 0.2 for 45, 65, and 75 dB
   // rate saturation at 75 dB
   // depolarisation threshold 10dB
   spl      = 40   //30 dB above depolarisation threshold
   tonefreq = 3900 //Hz, characteristic frequency
   whichcell = FindInd(tonefreq)  //get CF index close to 3.9kHz
   print "CS data CF ", tonefreq, "(Hz), location ", whichcell
   
   objref tempmat, ivdata[2]
   ivdata[0] = new Vector()
   ivdata[1] = new Vector()

   file.ropen("TStellate/CS-01-864-004.png.dat")
   
   tempmat = new Matrix(points, 2)
   tempmat.scanf(file) 
   ivdata[0] = tempmat.getcol(0) //time
   ivdata[1] = tempmat.getcol(1) //voltage (mV)
   file.close()
   chopperIVgr =  new Graph()   
   ivdata[1].plot(chopperIVgr,ivdata[0])
   chopperIVgr.exec_menu("View = plot")
   sprint(fileroot,"TStellate_CS")    // root for output filenames
  CalcIVMeasures(ivdata[1])
  ChopperCVData()
  CV_data = CV_sustained.getcol(1).c
}

proc CT1_data() {local points
    
   // chopper transient 1
   // unit 01-857-007 \citep{PaoliniClareyEtAl:2005}
   // CV first 10ms <0.2, then moves above 0.2
   // this unit's depolarisation threshold  55 dB
   // average CT threshold for depolarization
   // and AP generation of 47.2 ± 2.5 and 57.4 ± 2.2 dB SPL

   
   spl      = 85   //30 dB above depolarisation threshold
   tonefreq = 8200 //Hz, characteristic frequency
   whichcell = FindInd(tonefreq)  //get CF index close to 8.2kHz
   print "CT1 data CF ", tonefreq, "(Hz), location ", whichcell
   file.ropen("TStellate/CT1-01-857-007.png.dat") 
   objref tempmat, ivdata[2]
   ivdata[0] = new Vector()
   ivdata[1] = new Vector()
   tempmat = new Matrix(points, 2)
   tempmat.scanf(file) 
   ivdata[0] = tempmat.getcol(0) //time
   ivdata[1] = tempmat.getcol(1) //voltage (mV)
   file.close()
   chopperIVgr =  new Graph()   
   ivdata[1].plot(chopperIVgr,ivdata[0])
   chopperIVgr.exec_menu("View = plot")
  sprint(fileroot,"TStellate_CT1")    // root for output filenames
  CalcIVMeasures(ivdata[1])
  ChopperCVData()
  CV_data = CV_transient1.getcol(1).c

}

proc CT2_data() {local points
    
   //chopper transient type 2 
   // unit 01-305-014 \citep{PaoliniClareyEtAl:2005}
   //CV (10ms segs) first 10m below 0.2, then rises above 0.3 
   // rate saturation at 5 dB
   spl      = 35   //30 dB above depolarisation threshold
   tonefreq = 12400 //Hz
   whichcell = FindInd(tonefreq)  //get CF index close to 12.4kHz   
   file.ropen("TStellate/CT2-01-305-014.png.dat")
   print "CT2 data CF ", tonefreq, "(Hz), location ", whichcell
   
   objref tempmat, ivdata[2]
   ivdata[0] = new Vector()
   ivdata[1] = new Vector()
   tempmat = new Matrix() //points, 2)
   tempmat.scanf(file) 
   ivdata[0] = tempmat.getcol(0) //time
   ivdata[1] = tempmat.getcol(1) //voltage (mV)
   file.close()
   chopperIVgr =  new Graph()   
   ivdata[1].plot(chopperIVgr,ivdata[0])
   chopperIVgr.exec_menu("View = plot")
   sprint(fileroot,"TStellate_CT2")    // root for output filenames
  CalcIVMeasures(ivdata[1])
  ChopperCVData()
  CV_data = CV_transient2.getcol(1).c
 
}









CT1_data()


//RefreshParameters()    //Generate or get stim from file
//ANFilterBankRun()
//SetRates2()
binwidth=0.5
objref iv,meaniv,psthgr
psthgr = new Graph()
proc RunTStellate(){
    objref iv,meaniv,tvec
//    ClearSpikes()
    iv = new Vector()
    iv.record(&tstellate[whichcell][0].soma.v(0.5))
    meaniv = new Vector(tstop/dt + 1,0)
    //tstellate[whichcell][0].spikes.resize(0)
	tstellate[whichcell][0].spikes = new List()
    for ireps = 0, reps-1 {
        GenSpikes2()
        print ireps
        run()
        //SaveSpikes()
        tstellate[whichcell][0].spikes.append(tstellate[whichcell][0].spiketimes.c)
        for i=0,tstop/dt-1{
         if (iv.x[i] > thresh) iv.x[i] = thresh
        }
        meaniv.add(iv)
        iv.mul(0)
    }
    meaniv.div(reps)
    tvec=new Vector(tstop/dt + 1)
    tvec.indgen(dt).add(-20)
    meaniv.plot(chopperIVgr,tvec)

    chopperIVgr.exec_menu("View = plot")
  CalcIVMeasures(ivdata[1])
  CalcIVMeasures(meaniv)
  //psth = tstellate[whichcell][0].spikes.histogram(0,110,binwidth)
  //psth.plot(psthgr,binwidth) psthgr.exec_menu("View = plot")
  PSTHcell(tstellate[whichcell][0].spikes,10,1)
}

//Some default parameters
v_init = -65
tstellate_gnabar_rm = 0.23677 
tstellate_gkhtbar_rm= 0.0189416 
tstellate_gleak_rm  = 0.000473539 
tstellate_erev_rm   =-55 
tstellate_ghbar_rm  = 6.20392e-05
tstellate_gkabar_ka = 0.01539

proc reset_TStellate(){local ii
    print "updating features for T stellate optimisation routines"
    for ii = 0,nchannels-1 {
        if(ii == 20 || ii == 38 || ii == 51){
            sprint(cmd,"tstellate[%d][0].soma.gnabar_rm  = tstellate_gnabar_rm",ii) execute1(cmd)
            sprint(cmd,"tstellate[%d][0].soma.gkhtbar_rm = tstellate_gkhtbar_rm",ii) execute1(cmd)
            sprint(cmd,"tstellate[%d][0].soma.gleak_rm   = tstellate_gleak_rm",ii) execute1(cmd)
            sprint(cmd,"tstellate[%d][0].soma.erev_rm    = tstellate_erev_rm",ii) execute1(cmd)
            sprint(cmd,"tstellate[%d][0].soma.ghbar_rm   = tstellate_ghbar_rm",ii) execute1(cmd)
            sprint(cmd,"tstellate[%d][0].soma.gkabar_ka  = tstellate_gkabar_ka",ii) execute1(cmd)
        }    
    }
}


proc IVMeasures(){
    /// args: 1 time vec, 2 voltage vec, 3 output vec (size=6)
    onset_depol = $o2.mean($o1.indwhere(">=",5.0), $o1.indwhere(">=",10.0))
    middle_depol = $o2.mean( $o1.indwhere(">=",20), $o1.indwhere(">=",30))
    onset_ratio = onset_depol / middle_depol
	
    v20_depol = $o2.mean( $o1.indwhere(">=",20) - 1, $o1.indwhere(">=",22))
    v50_depol = $o2.mean( $o1.indwhere(">=",50) - 1, $o1.indwhere(">=",52))
    adaptation_ratio = v20_depol - v50_depol
	
    resting_value  = $o2.mean(0 , $o1.indwhere(">",0))
    v60_depol  = $o2.mean($o1.indwhere(">=",60) - 1, $o1.indwhere(">=",65))
    offset_hyperpol = resting_value - v60_depol
    
    $o3.x[0] = onset_ratio
    $o3.x[1] = adaptation_ratio
    $o3.x[2] = offset_hyperpol
	print "resting membrane potential              ", resting_value
	print "level of initial depolarization         ", onset_ratio
	print "adaptation of sustained depolarization  ", adaptation_ratio
	print "post-tone hyperpolarization             ", offset_hyperpol

}
