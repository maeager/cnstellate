/* -*- mode: nrnhoc; tab-width: 4; indent-tabs-mode: t -*- */

/* 
 *   
 *    Copyright Â© 2012 Michael Eager, (mick.eager@gmail.com)
 *
 *    This file is part of cnstellate.
 * 
 *    This is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    This is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.  
 */


// Params.hoc
// Cochlear Nucleus network model: parameters file
// based on parameters_odour_baseline.hoc by Andrew Davison
// Michael Eager, University of Melbourne

nchannels       = 100      // Total number of frequency channels
nTSperchannel   = 1   // number of TS cells in each freq channel
numTS			= nchannels*nTSperchannel   // total number of TS cells
nTVperchannel   = 1   // number of TV cells in each freq channel
numTV			= nchannels*nTVperchannel   // total number of TV cells
nDSperchannel   = 1   // number of DS cells in each freq channel
numDS			= nchannels*nDSperchannel   // total number of DS cells
nGperchannel	= 1   // number of Golgi cells in each freq channel
numG			= nchannels*nGperchannel   // total number of Golgi cells
HSRsperchannel  = 100
MSRsperchannel  = 0
LSRsperchannel  = 100
seed			= 0         // seed for random number generator
thresh			= -30       // mV   // threshold for detecting spikes


strdef fileroot
sprint(fileroot,"ClickDelay") // root for output filenames

inputnumber		= 1      // fixed input file
tstop			= 400    // ms, total simulation time
ttrans			= 10     // ms, when calculating statistics, ignore
                         // spikes occuring before this time (part of calcisi)
cvode.active(0)
celsius			= 37
secondorder		= 2      //Crank-Nicholson integration method
dt				= 0.05   //ms
steps_per_ms	= 10
setdt()                  //this will automatically set dt to 0.05, 
                         //so if you want to set dt to 0.1, this  must be done after calling setdt() 
