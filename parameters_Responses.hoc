/* -*- mode: nrnhoc; tab-width: 4; indent-tabs-mode: t -*- */

/* 
 *   
 *    Copyright Â© 2012 Michael Eager, (mick.eager@gmail.com)
 *
 *    This file is part of cnstellate.
 * 
 *    This is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    This is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.  
 */


// Cochlear Nucleus network model: parameters file
// based on parameters_odour_baseline.hoc by Andrew Davison
// Michael Eager, University of Melbourne, 2009

nchannels   	= 100			// Total number of frequency channels
nTSperchannel   = 1           		// number of TS cells in each freq channel
numTS			= nchannels*nTSperchannel// total number of TS cells
nTVperchannel   = 1           		// number of TV cells in each freq channel
numTV			= nchannels*nTVperchannel// total number of TV cells
nDSperchannel   = 1           		// number of DS cells in each freq channel
numDS			= nchannels*nDSperchannel// total number of DS cells
nGperchannel 	= 1          		// number of Golgi cells in each freq channel
numG	     	= nchannels*nGperchannel// total number of Golgi cells

seed			= 0         		// seed for random number generator see InitRandom() in Utilities.hoc
thresh			= -20       		// mV, threshold for detecting spikes


strdef fileroot
sprint(fileroot,"Responses")	// root for output filenames

tstop			= 400               // ms, total simulation time
ttrans			= 20                // ms,  when calculating statistics, ignore
	      			// spikes occuring before this time
cvode.active(0)
dt				= 0.05
steps_per_ms 	= 10            // NEURON variable
setdt()
dt				= 0.1		//ms, integration time step
celsius			= 37		//degrees C, body  temperature
secondorder		= 2		//second order integration
